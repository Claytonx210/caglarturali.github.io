{"version":3,"sources":["data/tabs lazy /^/.//.*/.md$/ groupOptions: {} namespace object","theme/icons.ts","theme/fonts.ts","layouts/Main/components/Header/NavBar/NavItem/styles.ts","theme/dimens.ts","layouts/Main/components/Header/NavBar/NavItem/index.tsx","layouts/Main/components/Header/NavBar/styles.ts","theme/colors.ts","layouts/Main/components/Header/NavBar/index.tsx","layouts/Main/components/Header/styles.ts","layouts/Main/components/Header/index.tsx","layouts/Main/components/LeftBar/styles.ts","layouts/Main/components/LeftBar/index.tsx","layouts/Main/components/StatusBar/styles.ts","layouts/Main/components/StatusBar/index.tsx","layouts/Main/styles.ts","layouts/Main/index.tsx","components/SEO/index.tsx","components/Container/styles.ts","components/Container/index.tsx","components/MDPage/index.tsx","components/ButtonLink/styles.ts","components/ButtonLink/index.tsx","hooks/useLocalStorageState.ts","components/GHButton/index.tsx","views/Greeter/components/MainButtons/index.tsx","views/Greeter/components/MainButtons/styles.ts","utils/paths.ts","views/Greeter/styles.ts","views/Greeter/index.tsx","utils/helpers.ts","data/tabs/_.ts","routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","library","add","fab","faHome","faCheckSquare","faCoffee","faSlidersH","faUniversity","faCodeBranch","faTimes","faSmile","faStar","faCopy","faSearch","faCog","sansFont","root","display","navText","marginLeft","currentTab","otherTab","useStyles","createUseStyles","styles","NavItem","name","url","iconProps","classes","className","to","getProps","isCurrent","size","onClick","preventDefault","stopPropagation","navigate","icon","float","fontFamily","list","color","listStyle","margin","padding","listItem","borderRight","Color","darken","string","borderTop","cursor","fontSize","letterSpacing","textTransform","transition","borderTopColor","background","lighten","Navbar","tabs","tab","key","position","top","left","width","Header","NavBar","alignItems","flexDirection","justifyContent","height","item","marginBottom","LeftBar","contactData","aria-label","title","href","target","rel","bottom","fontWeight","text","StatusBar","pkg","repository","inverse","html","body","boxSizing","button","a","textDecoration","transform","MainLayout","children","SEO","description","lang","meta","metaDescription","metadata","Helmet","htmlAttributes","titleTemplate","content","keywords","homepage","themeColor","property","image","verification","google","concat","marginTop","maxWidth","subtitle","paddingLeft","Container","seo","MDPage","fileName","useState","contents","setContents","useEffect","file","fetch","default","response","loadFile","source","borderRadius","minHeight","count","ButtonLink","showCount","useLocalStorageState","defaultVal","value","JSON","parse","window","localStorage","getItem","String","state","setState","setItem","stringify","GHButton","resource","attr","endpoint","btnProps","loading","setLoading","undefined","attrCount","setAttrCount","lastCheck","setLastCheck","fetchApi","json","Date","now","MainButtons","contactItems","repoUrl","parts","URL","pathname","split","repo","pop","username","getGHCredentials","ghButtons","mainContact","find","c","isMain","btn","heading","textShadow","userSelect","typedWrap","borderBottom","Greeter","greeting","options","strings","typed","typeSpeed","backSpeed","loop","smartBackspace","Typed","destroy","hello","randomInt","Math","floor","random","length","randomHello","mainLine","style","whiteSpace","mdFileName","Home","props","greetingData","Tab","path","App","Main","routes","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.626f3a6c.chunk.js","sourcesContent":["var map = {\n\t\"./certificates.md\": [\n\t\t157,\n\t\t3\n\t],\n\t\"./education.md\": [\n\t\t158,\n\t\t4\n\t],\n\t\"./projects.md\": [\n\t\t159,\n\t\t5\n\t],\n\t\"./skills.md\": [\n\t\t160,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 155;\nmodule.exports = webpackAsyncContext;","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faHome,\n  faCheckSquare,\n  faCoffee,\n  faSlidersH,\n  faUniversity,\n  faCodeBranch,\n  faTimes,\n  faSmile,\n  faStar,\n  faCopy,\n  faSearch,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  fab,\n  faHome,\n  faCheckSquare,\n  faCoffee,\n  faSlidersH,\n  faUniversity,\n  faCodeBranch,\n  faTimes,\n  faSmile,\n  faStar,\n  faCopy,\n  faSearch,\n  faCog,\n);\n","/**\n * App fonts.\n */\nexport const sansFont = \"'Ubuntu', sans-serif\";\nexport const monoFont = \"'Ubuntu Mono', monospace\";\n","/**\n * NavItem component styles.\n */\nimport { Styles } from 'react-jss';\nimport { desktopBreakpoint } from '../../../../../../theme';\n\nexport default {\n  root: {\n    '& a[aria-current=\"page\"] span': {\n      display: 'inline-block !important',\n    },\n  },\n  navText: {\n    marginLeft: '8px',\n    [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n      display: 'none',\n    },\n  },\n  currentTab: {\n    '& .closeButton': {\n      marginLeft: '16px',\n      [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n        marginLeft: '8px',\n      },\n    },\n  },\n  otherTab: {\n    '& .closeButton': {\n      display: 'none',\n    },\n  },\n} as Styles;\n","/**\n * Dimensions.\n */\nexport const sSize = '1.2rem';\nexport const msSize = '1.4rem';\nexport const mSize = '1.6rem';\nexport const mlSize = '2.0rem';\nexport const mllSize = '2.4rem';\nexport const lSize = '3.2rem';\nexport const xlSize = '4.8rem';\n\nexport const desktopBreakpoint = '45rem';\nexport const leftBarWidth = '50px';\n","/**\n * NavItem component.\n */\nimport React from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createUseStyles } from 'react-jss';\nimport { TabSpec } from '../../../../../../models';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst NavItem: React.FC<TabSpec> = ({ name, url, ...iconProps }) => {\n  const classes = useStyles();\n\n  const onCloseClicked = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigate('/');\n  };\n\n  return (\n    <span className={classes.root}>\n      <Link\n        to={url}\n        getProps={({ isCurrent }) => {\n          return {\n            className: isCurrent ? classes.currentTab : classes.otherTab,\n          };\n        }}\n      >\n        <FontAwesomeIcon {...iconProps} size={iconProps.size || 'lg'} />\n        <span className={classes.navText}>{name}</span>\n        <FontAwesomeIcon\n          onClick={onCloseClicked}\n          className=\"closeButton\"\n          icon=\"times\"\n          size=\"1x\"\n        />\n      </Link>\n    </span>\n  );\n};\n\nexport default NavItem;\n","/**\n * NavBar component styles.\n */\nimport { Styles } from 'react-jss';\nimport Color from 'color';\nimport {\n  bgMidBlue,\n  bgDarkBlue,\n  textWhite,\n  textLightBlue,\n  sSize,\n  desktopBreakpoint,\n  sansFont,\n} from '../../../../../theme';\n\nexport default {\n  root: {\n    float: 'left',\n    fontFamily: sansFont,\n  },\n  list: {\n    color: textLightBlue,\n    listStyle: 'none',\n    margin: '0',\n    padding: '0',\n  },\n  listItem: {\n    display: 'inline-block',\n    '& a': {\n      borderRight: `1px solid ${Color(bgMidBlue).darken(0.05).string()}`,\n      borderTop: `4px solid ${bgDarkBlue}`,\n      cursor: 'pointer',\n      display: 'inline-block',\n      fontSize: sSize,\n      letterSpacing: '0.5px',\n      padding: '10px 15px',\n      textTransform: 'lowercase',\n      transition: 'background, border-color 250ms ease',\n      [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n        letterSpacing: '0',\n        padding: '10px',\n      },\n      '&:hover, &[aria-current=\"page\"]': {\n        borderTopColor: bgDarkBlue,\n        background: Color(bgDarkBlue).lighten(0.02).string(),\n        color: textWhite,\n      },\n      '&[aria-current=\"page\"]': {\n        background: bgMidBlue,\n        borderTopColor: Color(bgDarkBlue).lighten(0.05).string(),\n      },\n    },\n  },\n} as Styles;\n","/**\n * App colors.\n */\nexport const bgDarkBlue = '#21252b';\nexport const bgMidBlue = '#282c34';\nexport const bgLightBlue = '#333842';\nexport const lbIconColor = '#9599a0';\n\nexport const textWhite = '#f3f3f3';\nexport const textMid = '#c2c2c2';\nexport const textDark = '#909295';\nexport const textBlue = '#636d83';\nexport const textLightBlue = '#abb2bf';\n\nexport const green = '#98c379';\nexport const red = '#e06c75';\nexport const cyan = '#56b6c2';\nexport const midBlue = '#42a5f5';\nexport const orange = '#d19a66';\nexport const jsOrange = '#ffca28';\nexport const darkOrange = '#e44d26';\nexport const lightBrown = '#6e6352';\nexport const pink = '#e13e76';\nexport const purple = '#c678dd';\n","/**\n * NavBar component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport NavItem from './NavItem';\nimport { TabProps } from '../../..';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst Navbar: React.FC<TabProps> = ({ tabs }) => {\n  const classes = useStyles();\n\n  return (\n    <nav className={classes.root}>\n      <ul className={classes.list}>\n        {tabs.map((tab) => (\n          <li className={classes.listItem} key={tab.name}>\n            <NavItem {...tab} />\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/**\n * Header component styles.\n */\nimport { Styles } from 'react-jss';\nimport { bgDarkBlue, leftBarWidth, desktopBreakpoint } from '../../../../theme';\n\nexport default {\n  root: {\n    background: bgDarkBlue,\n    position: 'fixed',\n    top: '0',\n    left: leftBarWidth,\n    width: '100vw',\n    [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n      left: '0',\n    },\n  },\n} as Styles;\n","/**\n * Header component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport NavBar from './NavBar';\nimport { TabProps } from '../..';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst Header: React.FC<TabProps> = ({ tabs }) => {\n  const classes = useStyles();\n\n  return (\n    <header className={classes.root}>\n      <NavBar tabs={tabs} />\n    </header>\n  );\n};\n\nexport default Header;\n","/**\n * LeftBar component styles.\n */\nimport { Styles } from 'react-jss';\nimport Color from 'color';\nimport {\n  bgLightBlue,\n  lbIconColor,\n  leftBarWidth,\n  desktopBreakpoint,\n} from '../../../../theme';\n\nexport default {\n  root: {\n    alignItems: 'center',\n    background: bgLightBlue,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: '100vh',\n    left: '0',\n    position: 'fixed',\n    top: '0',\n    width: leftBarWidth,\n    [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n      display: 'none',\n    },\n    '& div': {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '10px 0',\n    },\n  },\n  item: {\n    color: lbIconColor,\n    cursor: 'pointer',\n    marginBottom: '10px',\n    transition: 'color 100ms ease',\n    '&:hover': {\n      color: Color(lbIconColor).lighten(0.2).string(),\n    },\n    '&:last-of-type': {\n      marginBottom: '30px',\n    },\n  },\n  icon: {\n    padding: '10px',\n  },\n} as Styles;\n","/**\n * LeftBar component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Link } from '@reach/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { ContactItem } from '../../../../models';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface LeftBarProps {\n  contactData: ContactItem[];\n}\n\nconst LeftBar: React.FC<LeftBarProps> = ({ contactData }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div>\n        {/* Home button */}\n        <Link\n          to=\"/\"\n          key=\"home-page\"\n          className={classes.item}\n          aria-label=\"Home page\"\n          title=\"Home page\"\n        >\n          <FontAwesomeIcon className={classes.icon} icon=\"home\" size=\"lg\" />\n        </Link>\n        {/* Contact buttons */}\n        {contactData.map(({ name, url, icon }) => (\n          <a\n            className={classes.item}\n            key={`left-bar-${name}`}\n            href={url}\n            aria-label={`Find me on ${name}`}\n            title={`Find me on ${name}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon\n              className={classes.icon}\n              icon={icon as IconProp}\n              size=\"lg\"\n            />\n          </a>\n        ))}\n      </div>\n      <div>\n        <span className={classes.item} title=\"Useless button!\">\n          <FontAwesomeIcon icon=\"cog\" size=\"lg\" />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default LeftBar;\n","/**\n * StatusBar component styles.\n */\nimport { Styles } from 'react-jss';\nimport {\n  bgDarkBlue,\n  bgMidBlue,\n  textLightBlue,\n  sSize,\n  sansFont,\n} from '../../../../theme';\n\nexport default {\n  root: {\n    bottom: '0',\n    background: bgDarkBlue,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    fontFamily: sansFont,\n    fontWeight: 400,\n    left: '0',\n    position: 'fixed',\n    width: '100vw',\n    '& span, & a': {\n      display: 'inline-block',\n      padding: '2px 8px',\n      '&:hover': {\n        background: bgMidBlue,\n        cursor: 'pointer',\n      },\n    },\n  },\n  icon: {\n    color: textLightBlue,\n  },\n  text: {\n    color: textLightBlue,\n    fontSize: sSize,\n    padding: '0 4px',\n  },\n} as Styles;\n","/**\n * StatusBar component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './styles';\nimport pkg from '../../../../../package.json';\n\nconst useStyles = createUseStyles(styles);\n\nconst StatusBar: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.root}>\n      <a href={pkg.repository.url} rel=\"noopener noreferrer\" target=\"_blank\">\n        <FontAwesomeIcon\n          className={classes.icon}\n          icon=\"code-branch\"\n          size=\"xs\"\n          inverse\n        />\n        <span className={classes.text}>master</span>\n      </a>\n\n      <span>\n        <FontAwesomeIcon\n          className={classes.icon}\n          icon=\"smile\"\n          size=\"sm\"\n          inverse\n        />\n      </span>\n    </footer>\n  );\n};\n\nexport default StatusBar;\n","/**\n * Main layout styles.\n */\nimport Color from 'color';\nimport { Styles } from 'react-jss';\nimport { bgMidBlue, textLightBlue, mSize, monoFont } from '../../theme';\n\n// Notice that it's an object containing\n// global \"base\" values for the rest of the app.\nexport default {\n  '@global': {\n    html: {\n      fontSize: '62.5%',\n    },\n    body: {\n      fontFamily: monoFont,\n      fontSize: mSize,\n      background: bgMidBlue,\n      boxSizing: 'border-box',\n    },\n    button: {\n      cursor: 'pointer',\n      '&:disabled': {\n        cursor: 'default',\n      },\n    },\n    a: {\n      color: textLightBlue,\n      textDecoration: 'none',\n      transition: 'color 500ms ease',\n      '&:visited': {\n        color: Color(textLightBlue).darken(0.1).string(),\n      },\n    },\n    '.color-transform': {\n      transform: 'color 500ms ease',\n    },\n  },\n} as Styles;\n","/**\n * Main layout.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Header from './components/Header';\nimport LeftBar from './components/LeftBar';\nimport StatusBar from './components/StatusBar';\nimport { TabSpec, ContactItem } from '../../models';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface TabProps {\n  tabs: TabSpec[];\n}\n\nexport interface MainLayoutProps extends TabProps {\n  contactData: ContactItem[];\n}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({\n  children,\n  tabs,\n  contactData,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Header tabs={tabs} />\n      <LeftBar contactData={contactData} />\n      <main>{children}</main>\n      <StatusBar />\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport metadata from '../../data/metadata.json';\n\nexport interface SEOProps {\n  title: string;\n  description?: string;\n  lang?: string;\n  meta?: HTMLMetaElement[];\n}\n\nconst SEO: React.FC<SEOProps> = ({\n  title,\n  description,\n  lang = 'en',\n  meta = [],\n}) => {\n  const metaDescription = description || metadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s • ${metadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          name: 'keywords',\n          content: metadata.keywords,\n        },\n        {\n          name: 'canonical',\n          content: metadata.homepage,\n        },\n        {\n          name: 'theme-color',\n          content: metadata.themeColor,\n        },\n        {\n          property: `og:title`,\n          content: metadata.title,\n        },\n        {\n          property: `og:description`,\n          content: metadata.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:url`,\n          content: metadata.homepage,\n        },\n        {\n          property: `og:image`,\n          content: metadata.image,\n        },\n        {\n          property: `og:image:width`,\n          content: '320',\n        },\n        {\n          property: `og:image:height`,\n          content: '320',\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:site`,\n          content: metadata.homepage,\n        },\n        {\n          name: `twitter:title`,\n          content: metadata.title,\n        },\n        {\n          name: `twitter:description`,\n          content: metadata.description,\n        },\n        {\n          name: `twitter:image`,\n          content: metadata.image,\n        },\n        {\n          name: `google-site-verification`,\n          content: metadata.verification.google,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nexport default SEO;\n","/**\n * Container component styles.\n */\nimport { Styles } from 'react-jss';\nimport {\n  leftBarWidth,\n  desktopBreakpoint,\n  green,\n  midBlue,\n  textLightBlue,\n  textMid,\n  mlSize,\n  mSize,\n} from '../../theme';\n\nexport default {\n  root: {\n    marginBottom: '64px',\n    marginTop: '36px',\n    marginLeft: leftBarWidth,\n    maxWidth: '960px',\n    padding: '20px',\n    '& a:hover': {\n      color: textMid,\n    },\n    '& li': {\n      listStyle: 'square',\n    },\n    [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n      marginLeft: 0,\n    },\n  },\n  title: {\n    color: green,\n    fontSize: mlSize,\n    margin: 0,\n    padding: 0,\n    [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n      fontSize: mSize,\n    },\n  },\n  subtitle: {\n    color: midBlue,\n    fontSize: mSize,\n    fontWeight: 500,\n    [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n      fontSize: mSize,\n    },\n  },\n  content: {\n    color: textLightBlue,\n    fontSize: mSize,\n    '& ul': {\n      [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n        paddingLeft: '20px',\n      },\n    },\n  },\n} as Styles;\n","/**\n * Container components used in tabs.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport SEO, { SEOProps } from '../SEO';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface ContainerProps {\n  title: string;\n  subtitle?: string;\n  seo?: SEOProps;\n}\n\nconst Container: React.FC<ContainerProps> = ({\n  title,\n  subtitle,\n  seo,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {!!seo && <SEO {...seo} />}\n      <div className={classes.root}>\n        <h2 className={classes.title}>{title}</h2>\n        <h3 className={classes.subtitle}>{subtitle}</h3>\n        <div className={classes.content}>{children}</div>\n      </div>\n    </>\n  );\n};\n\nexport default Container;\n","import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Container from '../Container';\n\nexport interface MDPageProps {\n  fileName: string;\n}\n\nconst MDPage: React.FC<MDPageProps> = ({ fileName }) => {\n  const [contents, setContents] = useState<string>('');\n\n  useEffect(() => {\n    const loadFile = async () => {\n      const file = await import(`../../data/tabs/${fileName}.md`);\n      const response = await fetch(file.default);\n      const text = await response.text();\n      setContents(text);\n    };\n    loadFile();\n  }, [fileName]);\n\n  return (\n    <Container title={fileName} seo={{ title: fileName }}>\n      <ReactMarkdown source={contents} />\n    </Container>\n  );\n};\n\nexport default MDPage;\n","/**\n * ButtonLink component styles.\n */\nimport { Styles } from 'react-jss';\nimport Color from 'color';\nimport { bgDarkBlue, textLightBlue, midBlue, sSize } from '../../theme';\n\nexport default {\n  root: {\n    background: bgDarkBlue,\n    borderRadius: '4px',\n    color: textLightBlue,\n    display: 'flex',\n    margin: '8px',\n    transition: 'color 500ms ease',\n    '&:hover': {\n      background: Color(bgDarkBlue).darken(0.1).string(),\n    },\n    '&:hover .icon': {\n      color: midBlue,\n    },\n  },\n  contents: {\n    alignItems: 'center',\n    display: 'flex',\n    minHeight: '24px',\n    padding: '6px 10px',\n  },\n  text: {\n    fontSize: sSize,\n    fontWeight: 400,\n    marginLeft: '6px',\n  },\n  count: {\n    fontSize: sSize,\n    background: Color(bgDarkBlue).lighten(0.5).string(),\n    borderRadius: '50%',\n    marginLeft: '10px',\n    padding: '4px 8px',\n  },\n} as Styles;\n","/**\n * ButtonLink component.\n */\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\nimport { createUseStyles } from 'react-jss';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface ButtonLinkProps {\n  href: string;\n  title: string;\n  text: string;\n  icon: IconProp;\n  size: SizeProp;\n  showCount?: boolean;\n  count?: number;\n}\n\nconst ButtonLink: React.FC<ButtonLinkProps> = ({\n  href,\n  title,\n  icon,\n  size,\n  text,\n  showCount,\n  count,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <a\n      className={classes.root}\n      href={href}\n      aria-label={title}\n      title={title}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span className={classes.contents}>\n        <FontAwesomeIcon className=\"icon\" icon={icon} size={size || 'lg'} />\n        <span className={classes.text}>{text}</span>\n        {!!showCount && <span className={classes.count}>{count}</span>}\n      </span>\n    </a>\n  );\n};\n\nexport default ButtonLink;\n","import { useState, useEffect } from 'react';\n\nexport const useLocalStorageState = <T>(\n  key: string,\n  defaultVal: T,\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const [state, setState] = useState<T>(() => {\n    let value;\n    try {\n      value = JSON.parse(\n        window.localStorage.getItem(key) || String(defaultVal),\n      ) as T;\n    } catch (e) {\n      value = defaultVal;\n    }\n    return value;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n\n  return [state, setState];\n};\n","/**\n * Generic GHButton component.\n */\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorageState } from '../../hooks';\nimport ButtonLink, { ButtonLinkProps } from '../ButtonLink';\n\n// 10 mins\nconst TIMEOUT = 10 * 60 * 1000;\n\nexport interface GHButtonProps extends ButtonLinkProps {\n  resource: {\n    endpoint: string;\n    attr: string;\n  };\n}\n\nconst GHButton: React.FC<GHButtonProps> = ({\n  resource: { attr, endpoint },\n  ...btnProps\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [attrCount, setAttrCount] = useLocalStorageState<number | undefined>(\n    attr,\n    undefined,\n  );\n  const [lastCheck, setLastCheck] = useLocalStorageState(\n    `${attr}_last_check`,\n    0,\n  );\n\n  useEffect(() => {\n    const fetchApi = async (): Promise<any> => {\n      const response = await fetch(endpoint);\n      const json = await response.json();\n\n      if (json[attr] >= 0) {\n        setAttrCount(json[attr]);\n      }\n\n      setLastCheck(Date.now());\n      setLoading(false);\n    };\n\n    if (attrCount === null || Date.now() > lastCheck + TIMEOUT) {\n      fetchApi();\n    }\n  });\n\n  return (\n    <ButtonLink\n      {...btnProps}\n      showCount={!loading && attrCount !== undefined}\n      count={attrCount}\n    />\n  );\n};\n\nexport default GHButton;\n","/**\n * MainButtons component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport ButtonLink from '../../../../components/ButtonLink';\nimport GHButton, { GHButtonProps } from '../../../../components/GHButton';\nimport { ContactItem } from '../../../../models';\nimport { getGHCredentials } from '../../../../utils';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface MainButtonsProps {\n  contactItems: ContactItem[];\n  repoUrl: string;\n}\n\nconst MainButtons: React.FC<MainButtonsProps> = ({ contactItems, repoUrl }) => {\n  const classes = useStyles();\n\n  const { repo, username } = getGHCredentials(repoUrl);\n\n  const ghButtons: GHButtonProps[] = [\n    // Follow button\n    {\n      resource: {\n        endpoint: `https://api.github.com/users/${username}`,\n        attr: 'followers',\n      },\n      href: `https://github.com/${username}`,\n      title: `Follow @${username} on GitHub`,\n      icon: ['fab', 'github'],\n      size: 'lg',\n      text: `Follow @${username}`,\n    },\n    // Stargazers button\n    {\n      resource: {\n        endpoint: `https://api.github.com/repos/${username}/${repo}`,\n        attr: 'stargazers_count',\n      },\n      href: repoUrl,\n      title: `Star ${username}/${repo} on GitHub`,\n      icon: 'star',\n      size: 'sm',\n      text: 'Star',\n    },\n  ];\n\n  const mainContact = contactItems.find((c) => c.isMain) as ContactItem;\n\n  return (\n    <div className={classes.root}>\n      <div>\n        {ghButtons.map((btn) => (\n          <GHButton key={`gh-btn-${btn.resource.attr}`} {...btn} />\n        ))}\n      </div>\n      <div>\n        <ButtonLink\n          href={mainContact.url}\n          title={`Find me on ${mainContact.name}`}\n          icon={mainContact.icon as IconProp}\n          size=\"lg\"\n          text=\"Contact Me\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MainButtons;\n","/**\n * MainButtons component styles.\n */\nimport { Styles } from 'react-jss';\n\nexport default {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: '50px',\n    '& div': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n} as Styles;\n","/**\n * Extracts username and repo name from given url.\n * @param repoUrl GitHub url\n */\nexport const getGHCredentials = (\n  repoUrl: string,\n): { username: string; repo: string } => {\n  const parts = new URL(repoUrl).pathname.split('/');\n  const repo = parts.pop() || '';\n  const username = parts.pop() || '';\n  return { repo, username };\n};\n","/**\n * Greeter component styles.\n */\nimport { Styles } from 'react-jss';\n\nimport {\n  bgDarkBlue,\n  textMid,\n  textDark,\n  midBlue,\n  mllSize,\n  lSize,\n  desktopBreakpoint,\n  mlSize,\n  sansFont,\n} from '../../theme';\n\nexport default {\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    justifyContent: 'center',\n    fontFamily: sansFont,\n  },\n  heading: {\n    color: textMid,\n    fontWeight: 400,\n    fontSize: lSize,\n    letterSpacing: '2px',\n    margin: '10px 20px',\n    padding: '0',\n    textShadow: `5px 5px ${bgDarkBlue}`,\n    userSelect: 'none',\n    [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n      fontSize: mllSize,\n    },\n  },\n  typedWrap: {\n    color: textDark,\n    fontSize: mllSize,\n    fontWeight: 400,\n    margin: '5px',\n    padding: '0',\n    userSelect: 'none',\n    '& a': {\n      textDecoration: 'none',\n      borderBottom: `1px dashed ${textDark}`,\n    },\n    '& strong': {\n      fontWeight: '500',\n    },\n    [`@media screen and (max-width: ${desktopBreakpoint})`]: {\n      fontSize: mlSize,\n    },\n  },\n  '.typed-cursor': {\n    color: midBlue,\n  },\n} as Styles;\n","/**\n * Greeter component.\n */\nimport React, { useEffect } from 'react';\nimport Typed from 'typed.js';\nimport { createUseStyles } from 'react-jss';\nimport MainButtons, { MainButtonsProps } from './components/MainButtons';\nimport SEO from '../../components/SEO';\nimport { Greeting } from '../../models';\nimport { randomHello } from '../../utils';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface GreeterProps extends MainButtonsProps {\n  greeting: Greeting;\n}\n\nconst Greeter: React.FC<GreeterProps> = ({\n  greeting,\n  contactItems,\n  repoUrl,\n}) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    const options = {\n      strings: greeting.typed,\n      typeSpeed: 70,\n      backSpeed: 50,\n      loop: true,\n      smartBackspace: true,\n    };\n\n    const typed = new Typed('#typed-insert-point', options);\n\n    return () => {\n      // Make sure to destroy Typed instance on unmounting\n      // to prevent memory leaks\n      typed.destroy();\n    };\n  }, [greeting]);\n\n  const hello = randomHello();\n\n  return (\n    <>\n      <SEO title={hello} />\n      <section className={classes.root}>\n        <h1 className={classes.heading}>{greeting.mainLine}</h1>\n        <div className={classes.typedWrap}>\n          <span id=\"typed-insert-point\" style={{ whiteSpace: 'pre' }} />\n        </div>\n        <MainButtons contactItems={contactItems} repoUrl={repoUrl} />\n      </section>\n    </>\n  );\n};\n\nexport default Greeter;\n","import hello from '../data/hello.json';\n\n/**\n * Says Hello in a random language.\n */\nexport const randomHello = (): string => {\n  const randomInt = Math.floor(Math.random() * hello.length);\n  return `${hello[randomInt].hello}!`;\n};\n","import { TabLink } from '../../models';\nimport { jsOrange, midBlue, green, pink } from '../../theme/colors';\n\nexport default [\n  {\n    icon: ['fab', 'js'],\n    color: jsOrange,\n    url: '/skills',\n    name: 'skills.js',\n    mdFileName: 'skills',\n  },\n  {\n    icon: 'university',\n    color: midBlue,\n    url: '/education',\n    name: '.educationrc',\n    mdFileName: 'education',\n  },\n  {\n    icon: 'sliders-h',\n    color: green,\n    url: '/projects',\n    name: 'projects.config',\n    mdFileName: 'projects',\n  },\n  {\n    icon: ['fab', 'sass'],\n    color: pink,\n    url: '/certificates',\n    name: 'certificates.sass',\n    mdFileName: 'certificates',\n  },\n] as TabLink[];\n","import React from 'react';\nimport MDPage from './components/MDPage';\nimport Greeter from './views/Greeter';\n\nimport tabs from './data/tabs/_';\nimport greetingData from './data/greeter.json';\nimport contactData from './data/contact.json';\nimport pkg from '../package.json';\n\nconst Home: React.FC<{ path: string }> = (props) => {\n  return (\n    <Greeter\n      greeting={greetingData}\n      contactItems={contactData}\n      repoUrl={pkg.repository.url}\n      {...props}\n    />\n  );\n};\n\nconst Tab: React.FC<{ path: string; fileName: string }> = (props) => {\n  return <MDPage {...props} />;\n};\n\nexport default [\n  <Home path=\"/\" key=\"home\" />,\n  tabs.map((file) => (\n    <Tab path={file.url} key={file.name} fileName={file.mdFileName} />\n  )),\n];\n","import React from 'react';\nimport { Router } from '@reach/router';\nimport MainLayout from './layouts/Main';\nimport routes from './routes';\n\nimport tabs from './data/tabs/_';\nimport contactData from './data/contact.json';\n\nconst App: React.FC = () => (\n  <MainLayout tabs={tabs} contactData={contactData}>\n    <Router>{routes}</Router>\n  </MainLayout>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\n/* eslint-enable */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './theme/icons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}